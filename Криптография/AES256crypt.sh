#!/bin/bash

# Скрипт шифрования/расшифровки файла или каталога с файлами
# Замечание:
# В силу неумения утилитой tar обрабатывать директории с пробелами в именах - пути к файлам/директориям которые нужно зашифровать - не должны содержать пробелы!
# Т.е. путь типа нижеследующих - будут некорректны! : 
# '/home/alex/Рабочий стол/1.txt'
# или
# '/home/alex/My Folder'
# "Корректный путь, без пробелов"
# '/home/alex/My_Folder'
#
# Автор: https://github.com/patsuckow/
# 2017г.

# Проверяем сколько аргументов переданно скрипту
if [[ $# -ne 2 ]]
then
  echo 'Переданно неправильное кол-во аргументов!'; exit 1
elif [[ !(-e $2) ]] # если переданный путь не существует, то
then
  echo 'Переданный аргумент - путь к файлу(директории) либо не существует либо при его написании допущена ошибка!'; exit 1
elif [[ (-f $2) || (-d $2) ]] # если указанный путь - это путь к файлу или директории с файлами, то
then
 # Если нужно зашифровать
 if [[ (-n $1) && ($1 == 'enc') ]]
 then
    path=$2 # Сохраняем переданный путь в переменную
    cd `dirname $2` # заходим в каталог с файлом/папкой c файлами которые нужно зашифровать, в независимости от того, где находились, когда запустили скрипт
    # Eсли указанный путь - это директория с файлами, то
    if [[ -d $path ]]
    then
      dir_name=`basename $2` # получаем имя каталога, который нужно заархивировать перед шифрованием

      # tar -rf "$dir_name.tar" $dir_name
      # if [[ $? -ne 0 ]]; then echo 'Что-то пошло не так.'; exit 1; fi
      # Либо можно сократить, записав без IF с использование оператора || :
      tar -rf "$dir_name.tar" $dir_name || echo 'Что-то пошло не так.'; exit 1

      path="$dir_name.tar" # архив, который и будем шифровать
    fi
    # Зашифруем файл используя алгоритм симетричного шифрования - AES, с длиной ключа 256 бит.
    openssl enc -aes-256-cbc -salt -in "$path" -out "$path.$1"
    # Если шифрование прошло успешно, то удалим незашифрованный файл за ненадобностью
    if [[ $? -eq 0 ]]
    then
      echo "Шифрование прошло успешно, получен файл $path.$1"
      rm -rf $2
      if [[ (-e $path) && (-f $path) ]]; then rm $path; fi # если есть файл архива tar, удаляем и его
      echo "Исходный файл $2 удалён."
    fi
 # Если нужно расшифровать
 elif [[ (-n $1) && ($1 == 'dec') ]]
 then
   # Удалим последние 4 символа из названия шифрованного файла $1, т.е. удаляем '.dec'
   new_file=${2%%????} # В даном случае 2 - это не число, а имя переменной - второго аргумента!
   # Раcшифруем файл
   openssl enc -aes-256-cbc -d -in $2 -out $new_file
   # Если расшифровка прошла успешно, то
   if [[ $? -eq 0 ]]
   then echo "Расшифровка прошла успешно, получен файл $new_file"
     rm -fr $2
     # Если после расшифровки перед нами tar архив, то распакуем его
     if [[ `echo $new_file | tail -c 5` == '.tar' ]]
     then

       cd `dirname $new_file` # имя изначальной папки, заходим в неё
       echo 'Распаковка архива...';
       tar -xf $new_file;
       if [[ $? -eq 0 ]]; then echo 'Успешно.'; fi 
       rm $new_file; echo "Файл архива $new_file удалён."
       echo "Расшифрованный каталог - ${new_file%%????}"

     fi
     echo "Исходный файл $2 удалён."
   fi
 fi
fi
